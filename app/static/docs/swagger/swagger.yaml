
swagger: '2.0'

info:
  version: "1.1"
  title: targetvalidation.org REST API DOCS
  description: |
    Documentation for the REST API served at www.targetvalidation.org.
    More info [here](https://about.targetvalidation.org).
  license:
    name: Apache 2.0
  contact:
    email: support@targetvalidation.org
  termsOfService: |
    Fair usage is enforced with limits to the api calls
tags:
  - name: public
    description: Publicly supported stable API
  - name: private
    description: Unstable API methods, subject to change at any time without prior notice. Use at your own risk.
  - name: auth
    description: Authentication methods
  - name: utils
    description: Utility methods
basePath: /api/latest
consumes:
  - text/plain; charset=utf-8
  - application/json
produces:
  - application/json
  - text/xml
  - text/csv
# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /public/evidence:
    get:
      tags:
        - public
      description: |
        Gets `evidencestring` object by id
      parameters:
        - name: id
          in: query
          description: id of the evidencestring to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfPersons
            type: array
            items:
              title: EvidenceString
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
    post:
      tags:
        - public
      description: |
        Gets `evidencestring` object by id
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {["id1", "id2"]}
          description: ids of the evidencestring to retrieve
          required: true
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfEvidenceStrings
            type: array
            items:
              title: EvidenceString
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
  /public/evidence/filter:
    get:
      tags:
        - public
      description: |
        Gets `evidencestring` objects by applying a range of filters
      parameters:
        - name: target
          in: query
          description: a target identifier listed as target.id
          required: false
          type: string
        - name: disease
          in: query
          description: a EFO code listed as disease.id
          required: false
          type: string
        - name: datasource
          in: query
          description: datasource to consider
          required: false
          type: string
        - name: datatype
          in: query
          description: datatype to consider
          required: false
          type: string
        - name: pathway
          in: query
          description: a pathway identifier (meaning all the targets linked to that pathway)
          required: false
          type: string
        - name: uniprotkw
          in: query
          description: a uniprot keyword (meaning all the targets linked to that kw)
          required: false
          type: string
        - name: eco
          in: query
          description: a ECO identifier listed in the evidence
          required: false
          type: string
        - name: datastructure
          in: query
          description: Type of data structure to return. Can be 'full', 'simple', 'ids', or 'count'.
          required: false
          type: string
        - name: fields
          in: query
          description: fields you want to retrieve. this will get priority over the datastructure requested
          required: false
          type: string
        - name: direct
          in: query
          description: return only evidence directly linked with the disease efo term if true or all the evidence linked with its children in the EFO ontology if false
          required: false
          type: boolean
          default: false
        - name: scorevalue_min
          in: query
          description: filter by minimum score value. default is 0, but using 0.2 is a good tradeoff to filter lower quality data points
          required: false
          type: number
          format: float
          default: 0.
        - name: scorevalue_max
          in: query
          description: filter by maximum score value
          required: false
          type: number
          format: float
        - name: size
          in: query
          description: maximum amount of results to return. Defaults to 10, max is 1000
          required: false
          type: number
          format: integer
        - name: from
          in: query
          description: How many initial results should be skipped. Defaults to 0
          required: false
          type: number
          format: integer
        - name: format
          in: query
          description: Format to get data back. Can be 'json', 'xml' or 'table'
          required: false
          type: string
      responses:
        200:
          description: Successful response
    post:
      tags:
        - public
      description: |
        Gets `evidencestring` objects by applying a range of filters
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"target":["target1", "target2"]}
          description: filters to apply when retrieving evidencestring objects
          required: true
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfEvidenceStrings
            type: array
            items:
              title: EvidenceString
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
  /public/association:
    get:
      tags:
        - public
      description: |
        Gets `association` object by id
      responses:
        200:
          description: Successful response
  /public/association/filter:
    get:
      tags:
        - public
      description: |
        Gets `association` objects by applying a range of filters
      parameters:
        - name: target
          in: query
          description: a target identifier listed as target.id
          required: false
          type: string
        - name: disease
          in: query
          description: a EFO code listed as disease.id
          required: false
          type: string
        - name: datasource
          in: query
          description: datasource to consider
          required: false
          type: string
        - name: datatype
          in: query
          description: datatype to consider
          required: false
          type: string
        - name: pathway
          in: query
          description: a pathway identifier (meaning all the targets linked to that pathway)
          required: false
          type: string
        - name: uniprotkw
          in: query
          description: a uniprot keyword (meaning all the targets linked to that kw)
          required: false
          type: string
        - name: eco
          in: query
          description: a ECO identifier listed in the evidence
          required: false
          type: string
        - name: datastructure
          in: query
          description: Type of data structure to return. Can be 'full', 'simple', 'ids', or 'count'.
          required: false
          type: string
        - name: fields
          in: query
          description: fields you want to retrieve. this will get priority over the datastructure requested
          required: false
          type: string
        - name: outputstructure
          in: query
          description: Type of output structure to return. Can be 'flat', or 'tree'.
          required: false
          type: string
        - name: direct
          in: query
          description: |
            return only associations directly linked with the disease efo term if true or all the evidence linked with its children in the EFO ontology if false
          required: false
          type: boolean
          default: false
        - name: facets
          in: query
          description: returns facets
          required: false
          type: boolean
          default: false
        - name: scorevalue_min
          in: query
          description: filter by minimum score value
          required: false
          type: number
          format: float
          default: 0.2
        - name: scorevalue_max
          in: query
          description: filter by maximum score value
          required: false
          type: number
          format: float
        - name: scorevalue_types
          in: query
          description: score types to apply the scorevalue min and max filters. defaults to `overall`
          required: false
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 10, max is 1000
          required: false
          type: number
          format: integer
        - name: from
          in: query
          description: How many initial results should be skipped. Defaults to 0
          required: false
          type: number
          format: integer
        - name: format
          in: query
          description: Format to get data back. Can be 'json', 'xml' or 'table'
          required: false
          type: string
        - name: sort
          in: query
          description: |
            Sort by the given score type. Defaults to 'overall' and descending order. use '~' prefix to do ascending
            order eg. '~overall'. Call a datatype score like: 'datatypes.literature', and a datasource one as
            'datasources.gwas'. Supports multiple entries.
          required: false
          type: string
        - name: search
          in: query
          description: |
            restrict the filtered results to those matching the passed string. The matching is done with a
            phrase match prefix
          required: false
          type: string
      responses:
        200:
          description: Successful response
    post:
      tags:
        - public
      description: |
        Gets `association` objects by applying a range of filters
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"target":["target1", "target2"]}
          description: filters to apply when retrieving association objects
          required: true
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfAssociations
            type: array
            items:
              title: Associations
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
  /private/disease:
    get:
      tags:
        - private
      description: |
        Gets `disease` objects
      responses:
        200:
          description: Successful response
  /private/eco:
    get:
      tags:
        - private
      description: |
        Gets `eco` objects
      responses:
        200:
          description: Successful response
  /private/target:
    get:
      tags:
        - private
      description: |
        Gets `target` objects
      responses:
        200:
          description: Successful response
  /private/target/expression:
    get:
      tags:
        - private
      description: |
        Gets `gene-expression` objects
      parameters:
        - name: gene
          in: query
          description: an ensembl gene identifier
          required: true
          type: string
      responses:
        200:
          description: Successful response
    post:
      tags:
        - private
      description: |
        Gets `gene-expression` objects
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"gene":["gene1", "gene2"]}
          description: an ensembl gene identifier
          required: true
      responses:
        200:
          description: Successful response
  /public/search:
    get:
      tags:
        - public
      description: |
        Gets `search-result` objects
      parameters:
        - name: q
          in: query
          description: a full text query
          required: true
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 10, max is 1000
          required: false
          type: string
        - name: from
          in: query
          description: How many initial results should be skipped. Defaults to 0
          required: false
          type: string
        - name: filter
          in: query
          description: restrict the search to the type requested. Eg. `target` or `disease`.
          required: false
          type: string
      responses:
        200:
          description: Successful response
  /private/quicksearch:
    get:
      tags:
        - private
      description: |
        Gets `search-result` objects
      parameters:
        - name: q
          in: query
          description: a full text query
          required: true
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 5.
          required: false
          type: string
      responses:
        200:
          description: Successful response
  /private/autocomplete:
    get:
      tags:
        - private
      description: |
        Gets `autocomplete` objects
      parameters:
        - name: q
          in: query
          description: a full text query
          required: true
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 5
          required: false
          type: string
      responses:
        200:
          description: Successful response
  /public/auth/request_token:
    get:
      tags:
        - public
        - auth
      description: |
        Gets an authentication token in the form of [JWT](https://jwt.io/).
      parameters:
        - name: app_name
          in: query
          description: the name of the app you are using to request a token. You need to register the app before you will be able to request a token.
          required: true
          type: string
        - name: secret
          in: query
          description: the secret you were given when registering your app.
          required: true
          type: string
        - name: uid
          in: query
          description: the id of the user that is using your app
          required: false
          type: string
        - name: password
          in: query
          description: the password of the user that is using your app
          required: false
          type: string
        - name: expiry
          in: query
          description: seconds before the token expires
          required: false
          type: string
      responses:
        200:
          description: Successful response
  /public/auth/validate_token:
    get:
      tags:
        - public
        - utils
        - auth
      description: |
        Succed if token is valid
      responses:
        200:
          description: Successful response
  /public/utils/ping:
    get:
      tags:
        - public
        - utils
      description: |
        Ping service
      responses:
        200:
          description: Successful response
  /public/utils/version:
    get:
      tags:
        - public
        - utils
      description: |
        Get current API version
      responses:
        200:
          description: Successful response
  /public/utils/stats:
    get:
      tags:
        - public
        - utils
      description: |
        Get stats about available data
      responses:
        200:
          description: Successful response
